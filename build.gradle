plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'com.github.johnrengelman.shadow' version '7.+'
}

version = "1.16.4-${verspec}.${verbuild}"
group = "me.towdium.jecharacters"
archivesBaseName = "jecharacters"

sourceCompatibility = targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://dvs1.progwml6.com/files/maven' }
    maven { url 'https://jitpack.io' }
    maven { url "https://cursemaven.com" }
}

configurations {
    shade
    minecraftLibrary.extendsFrom shade
}

minecraft {
    mappings channel: 'parchment', version: '2022.03.06-1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'jecharacters', '--all', '--output', file('src/generated/resources/')
            mods {
                jecharacters {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    shade(group: 'com.github.towdium', name: 'PinIn', version: "${verpinin}") {
        transitive = false
    }
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
    implementation fg.deobf("curse.maven:jei-238222:4371666")
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
}

test {
    useJUnitPlatform()
}

jar {
    archiveClassifier.set('slim')
    manifest {
        attributes([
                "Specification-Title"     : 'Just Enough Characters',
                "Specification-Vendor"    : 'Towdium',
                "Specification-Version"   : "${verspec}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${verspec}.${verbuild}",
                "Implementation-Vendor"   : 'Towdium',
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task generate(type: Exec) {
    commandLine 'python', 'generate.py'
}

compileJava.dependsOn generate

task replaceResources(type: Copy) {
    outputs.upToDateWhen { false }
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': version
    }
    into "$buildDir/resources/main/"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
    finalizedBy replaceResources
}
